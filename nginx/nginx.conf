events {
    worker_connections 1024;
}

http {
    upstream headscale_backend {
        # Primary node (read/write)
        server headscale-primary:8080 weight=3 max_fails=3 fail_timeout=30s;
        
        # Replica node (read-only)
        server headscale-replica:8080 weight=1 max_fails=3 fail_timeout=30s backup;
    }

    upstream headscale_grpc {
        server headscale-primary:50443 weight=3 max_fails=3 fail_timeout=30s;
        server headscale-replica:50443 weight=1 max_fails=3 fail_timeout=30s backup;
    }

    server {
        listen 80;
        server_name _;


 # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # LiteFS cluster status
        location /cluster-status {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status": "checking primary..."}';
        }

        # Primary detection endpoint
        location /primary {
            access_log off;
            # Try each node to find the primary
            proxy_pass http://headscale-primary:20202/info;
            proxy_intercept_errors on;
            error_page 502 503 504 = @try_node2;
        }

        location @try_node2 {
            proxy_pass http://headscale-replica:20202/info;
            proxy_intercept_errors on;
            error_page 502 503 504 = @try_node3;
        }


        # Health check endpoint
        location /health2 {
            proxy_pass http://headscale_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Main Headscale API
        location / {
            proxy_pass http://headscale_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
    }

    server {
        listen 443 http2;
        server_name _;

        # gRPC endpoint for Tailscale clients
        location / {
            grpc_pass grpc://headscale_grpc;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
        }
    }
}